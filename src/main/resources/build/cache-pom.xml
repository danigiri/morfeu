<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>cat.calidos.morfeu</groupId>
	<artifactId>cache-warmer</artifactId>	
	<version>1.0.0</version>
	<packaging>war</packaging>

	<name>Maven cache warmer</name>

	<build>
	<plugins>
		<plugin>
			<artifactId>maven-compiler-plugin</artifactId>
				<version>3.6.1</version>
				<configuration>
					<source>11</source>
					<target>11</target>
				</configuration>
		</plugin>

	</plugins>
	</build>
		<dependencies>
		<!-- DEPENDENCY INJECTION dependencies (optionals not included in the final WAR archive) -->
		<dependency>
			<groupId>com.google.dagger</groupId>
			<artifactId>dagger</artifactId>
			<version>${dagger-2-version}</version>
		</dependency>
		<dependency>
			<groupId>com.google.dagger</groupId>
			<artifactId>dagger-producers</artifactId>
			<version>${dagger-2-version}</version>
		</dependency>
		<dependency>
			<groupId>com.google.dagger</groupId>
			<artifactId>dagger-compiler</artifactId>
			<version>${dagger-2-version}</version>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1.0.0.redhat-6</version>
			<!-- scope>provided</scope -->
		</dependency>

		<!-- XML Schema parsing (compatible license, see here https://xsom.java.net) -->
		<dependency>
			<groupId>com.sun.xsom</groupId>
			<artifactId>xsom</artifactId>
			<version>20140925.0.0.redhat-1</version>
		</dependency>


		<!-- Jackson JSON lib stuff -->
		 <!-- the core, which includes Streaming API, shared low-level abstractions (but NOT data-binding) -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>${jackson-2-version}</version>
		</dependency>

		 <!-- Just the annotations; use this dependency if you want to attach annotations
		      to classes without connecting them to the code. -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>${jackson-2-version}</version>
		</dependency>

		<!-- databinding; ObjectMapper, JsonNode and related classes are here -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson-2-version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-yaml</artifactId>
			<version>${jackson-2-version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jdk8</artifactId>
			<version>${jackson-2-version}</version>
		</dependency>

		<!-- JETTY RUNTIME -->
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-server</artifactId>
			<version>${jetty-version}</version>
		</dependency>

		<!-- HELPERS -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.6</version>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpasyncclient</artifactId>
			<version>4.1.4.redhat-00001</version>
		</dependency>
		<dependency><!-- to test dynamic preview with SVG -->
			<groupId>org.apache.xmlgraphics</groupId>
			<artifactId>batik-dom</artifactId>
			<version>1.12</version>
			<!-- get rid of java 1.9 module clashing old xml api dupes -->
			<exclusions>
				<exclusion>  <!-- declare the exclusion here -->
					<groupId>xml-apis</groupId>
					<artifactId>xml-apis</artifactId>
				</exclusion>
				<exclusion>  <!-- declare the exclusion here -->
					<groupId>xml-apis</groupId>
					<artifactId>xml-apis-ext</artifactId>
				</exclusion>
			</exclusions> 
		</dependency>
		<dependency>
			<groupId>org.apache.xmlgraphics</groupId>
			<artifactId>batik-svggen</artifactId>
			<version>1.12</version>
		</dependency>
		<dependency>	<!-- used to test the code integration -->
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>1.4.200</version>
		</dependency>

		<!-- logback -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.3.0-alpha5</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>2.0.0-alpha1</version>
		</dependency>

		<!--  templating -->
		<dependency>
			<groupId>org.jtwig</groupId>
			<artifactId>jtwig-core</artifactId>
			<version>${jtwig-version}</version>
		</dependency>
		<dependency>
			<groupId>org.jtwig</groupId>
			<artifactId>jtwig-reflection</artifactId>
			<version>${jtwig-version}</version>
		</dependency>

		<!-- request proxying -->
		<dependency>
			<groupId>org.mitre.dsmiley.httpproxy</groupId>
			<artifactId>smiley-http-proxy-servlet</artifactId>
			<version>1.11</version>
		</dependency>

		<!-- process execution -->
		<dependency>
			<groupId>org.zeroturnaround</groupId>
			<artifactId>zt-exec</artifactId>
			<version>1.11</version>
		</dependency>
		<dependency>
			<groupId>org.zeroturnaround</groupId>
			<artifactId>zt-process-killer</artifactId>
			<version>1.10</version>
		</dependency>

		<!-- UNIT TESTING -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>${jupiter-version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>${jupiter-version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.vintage</groupId>
			<artifactId>junit-vintage-engine</artifactId>
			<version>${jupiter-version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-launcher</artifactId>
			<version>${junit-platform-version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-runner</artifactId>
			<version>${junit-platform-version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>3.3.3</version>
			<scope>test</scope>
		</dependency>

		<!-- INTEGRATION TESTING -->
		<dependency>	<!-- web driver manager -->
			<groupId>io.github.bonigarcia</groupId>
			<artifactId>webdrivermanager</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<version>${selenium-version}</version>
			<scope>test</scope>
			<exclusions>
                <!--exclusion>
                   <groupId>org.seleniumhq.selenium</groupId>
                    <artifactId>selenium-chrome-driver</artifactId>
                </exclusion-->
				<exclusion>
					<groupId>org.seleniumhq.selenium</groupId>
					<artifactId>selenium-firefox-driver</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.seleniumhq.selenium</groupId>
					<artifactId>selenium-ie-driver</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.seleniumhq.selenium</groupId>
					<artifactId>selenium-iphone-driver</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.seleniumhq.selenium</groupId>
					<artifactId>selenium-htmlunit-driver</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.seleniumhq.selenium</groupId>
					<artifactId>selenium-android-driver</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-server</artifactId>
			<version>${selenium-version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-chrome-driver</artifactId>
			<version>${selenium-version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.codeborne</groupId>
			<artifactId>selenide</artifactId>
			<version>${selenide-version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.xmlunit</groupId>
			<artifactId>xmlunit-core</artifactId>
			<version>2.6.4</version>
		</dependency>

	</dependencies>

	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0</url>
			<comments>Copyright (C) 2020 Daniel Giribet</comments>
		</license>
	</licenses>

</project>
