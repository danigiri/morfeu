{%- if yaml.isObject -%}
	{#- ___________ yaml is object _________ -#}

	{%- if cellmodels.size()>1 -%}
		{#- We try to find a matching cell model -#}
	
		{%- for c in cellmodels -%}
			{%- if c.metadata.getDirectivesFor(case).contains('ATTRIBUTES-ONLY') -%}
				{#- match by attributes or children -#}
				{%- for a in c.asComplex.attributes.asList -%} 
				{%- if yaml.has(a.name) -%}
					{%- set found = true -%}
					{%- include 'cell-yaml-to-xml.dtwig' with {'yaml': yaml, 'cellmodels':[c], 'i':i, 'case': case} only -%}
				{%- endif -%}
				{%- endfor -%}
				{%- if not found -%}
					{%- for child in cm.asComplex.children.asList -%}
						{%- if child.metadata.getDirectivesFor(case).contains('LISTS-NO-PLURAL') -%}
							{%- set matchname = child.name -%}
						{%- else -%}
							{%- set matchname = concat(child.name, 's') -%}
						{%- endif -%}
						{%- if yaml.has(matchname) -%}
							{#- Matched a field in the yaml and an attribute, we assume we have a match -#}
							{%- set found = true -%}
							{%- include 'cell-yaml-to-xml.dtwig' with {'yaml': yaml.get(matchname), 'cellmodels':[child], 'i':i, 'case': case} only -%}
						{%- endif -%}
					{%- endfor -%}
				{% endif %}
			{%- else -%}
				{#- match by name -#}
				MATCH BY NAME
			{% endif -%}
		{%- endfor -%}
	
	{%- else -%}
		{#- cellmodels.size()==1 - We are already matched to a cell model, we start printing -#}
		{%- if cellmodels[0].isSimple -%}
			{%- if yaml.size>0 %}
{{i}}<{{cellmodels[0].name}}>{{yaml.asText | xmlc}}</{{cellmodels[0].name}}>
			{%- else %}
{{i}}<{{cellmodels[0].name}}/>
				{%- endif -%}
{% else %}	{#- complex #}
			{# - we check if we have a collection of key values or just a complex cell -#}
			{%- if cellmodels[0].metadata.getDirectivesFor(case).contains('KEY-VALUE') -%}
				{%- set kvs = yaml.fields -%}
				{%- for kvi in range(yaml.size()) -%}
{% include 'cell-complex-yaml-to-xml.dtwig' with {'yaml': kvs.next(), 'cellmodel':cellmodels[0], 'i':i, 'case': case} only %}
{% endfor-%}
			{%- else -%}
{% include 'cell-complex-yaml-to-xml.twig' with {'yaml': yaml, 'cellmodel':cellmodels[0], 'i':i, 'case': case} only -%}
			{%- endif -%}
		{%- endif -%} {#- simple or complex -#}

	{%- endif -%} {#- size()>0 -#}

{%- elseif yaml.isTextual -%}
	{#- ___________ yaml is a simple text node _________ -#}
{{i}}<{{cellmodels[0].name}}>{{yaml.asText | xmlc}}</{{cellmodels[0].name}}>
{% elseif yaml.isArray -%}
	{#- ___________ yaml is array _________ -#}
	{%- for y in range(yaml.size()) -%}
{% include 'cell-yaml-to-xml.dtwig' with {'yaml': yaml.get(y), 'cellmodels':cellmodels, 'i':concat(i,'\t'), 'case': case} only -%}
	{%- endfor -%}

{%- endif -%}
