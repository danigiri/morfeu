{#- This template takes all the attributes of a complex cell and prints them out as yaml. -%}
{#- Taking care of: -#}
{#- a) if we are key value, we print out a fixed output -#}
{#- b) otherwise, we print the fields (if we have an identifier we put it first and use the compact mapping form) -#}
{%- if cell.cellModel.metadata.identifier.isPresent -%}
	{%- set indentid = slice(indent, 2, length(indent)) -%}
	{%- set id = cell.cellModel.metadata.identifier.get -%}
	{%- set a = cell.asComplex.attributes.attribute(id) -%}
{%- endif -%}
{# Find out if we have key value -#}
{%- if cell.cellModel.metadata.getDirectivesFor(case).contains('KEY-VALUE') -%}
	{{-indentid}}- {{a.value.get}}:{% for x in cell.asComplex.attributes.asList %}{% if x.name!=id and x.value.isPresent %} {{x.value.get}}{% endif %}{% endfor %}
{% else -%}
	{#- hack to put the identifier first -#}
	{%- if cell.cellModel.metadata.identifier.isPresent -%}
		{{-indentid}}- {{a.name}}: {% if a.value.isPresent %}{{a.value.get}}{% endif %}
{% else -%}
		{%- set id = '' -%}
	{%- endif -%}
	{%- for x in cell.asComplex.attributes.asList -%}
	{%- if x.name!=id -%}
		{{-indent}}{{x.name}}: {% if x.value.isPresent %}{{x.value.get}}{% endif %}{# no multiline attributes allowed #}
{% endif -%}
{% endfor -%}
{%- endif -%}